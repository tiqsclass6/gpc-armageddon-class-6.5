substitutions:
  _REGION: "asia-northeast1"
  _SERVICE: "armageddon-service"

steps:
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: "Deploy branch-specific revision from source, tag, and update traffic"
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail

        # Map branch -> revision suffix, tag, and env text
        case "${BRANCH_NAME:-dev}" in
          fight)
            REV="rev-fight"
            TAG="fight"
            HEADER="Fight Smith Til The End"
            BOTTOM="Morpheus Believes In You Neo"
            IMAGE_URL="https://i.makeagif.com/media/7-01-2023/c8xnhX.gif"
            ;;
          believe)
            REV="rev-believe"
            TAG="believe"
            HEADER="Neo, Believe In Yourself"
            BOTTOM="The Oracle Always Knew"
            IMAGE_URL="https://media.giphy.com/media/26ufcYAkpGdhlLrTa/giphy.gif"
            ;;
          win)
            REV="rev-win"
            TAG="win"
            HEADER="This Is Not The End"
            BOTTOM="Hold The Lineâ€”Humanity Depends On You"
            IMAGE_URL="https://media1.giphy.com/media/3o6ZsX2T0GvY9dZYK8/giphy.gif"
            ;;
          *)
            REV="rev-stand"
            TAG="stand"
            HEADER="Smith Is Destroyed"
            BOTTOM="Zion Stands Strong Thanks To Neo"
            IMAGE_URL="https://i.makeagif.com/media/7-22-2016/HhnZ6O.gif"
            ;;
        esac

        BACKGROUND_IMAGE="https://i.pinimg.com/originals/c5/9a/d2/c59ad2bd4ad2fbacd04017debc679ddb.gif"

        echo "Deploying branch '${BRANCH_NAME:-dev}' as ${REV} (tag: ${TAG}) to ${_SERVICE} via buildpacks"

        # Deploy from source using buildpacks (no Dockerfile required)
        gcloud run deploy "${_SERVICE}" \
          --source=. \
          --region="${_REGION}" \
          --platform=managed \
          --allow-unauthenticated \
          --revision-suffix="${REV}" \
          --set-env-vars=HEADER_TEXT="${HEADER}",BOTTOM_TEXT="${BOTTOM}",FLASK_DEBUG="false",IMAGE_URL="${IMAGE_URL}",BACKGROUND_IMAGE="${BACKGROUND_IMAGE}"

        # Tag this revision (creates stable, direct URLs)
        NEW_REV=$(gcloud run revisions list --region="${_REGION}" --service="${_SERVICE}" --format='value(name)' --filter="name~${REV}" | head -n1 || true)
        if [[ -n "${NEW_REV}" ]]; then
          gcloud run services update-traffic "${_SERVICE}" \
            --region="${_REGION}" \
            --tag=${TAG}=${NEW_REV} --no-traffic
        fi

        # Enforce 40/40/10/10 traffic split across fight/believe/stand/win
        R_FIGHT=$(gcloud run revisions list --region="${_REGION}" --service="${_SERVICE}" --format='value(name)' --filter='name~rev-fight'   | head -n1 || true)
        R_BELIEVE=$(gcloud run revisions list --region="${_REGION}" --service="${_SERVICE}" --format='value(name)' --filter='name~rev-believe'| head -n1 || true)
        R_STAND=$(gcloud run revisions list --region="${_REGION}" --service="${_SERVICE}" --format='value(name)' --filter='name~rev-stand'   | head -n1 || true)
        R_WIN=$(gcloud run revisions list --region="${_REGION}" --service="${_SERVICE}" --format='value(name)' --filter='name~rev-win'       | head -n1 || true)

        if [[ -n "${R_FIGHT}" && -n "${R_BELIEVE}" && -n "${R_STAND}" && -n "${R_WIN}" ]]; then
          echo "Updating traffic to 40/40/10/10"
          gcloud run services update-traffic "${_SERVICE}" \
            --region="${_REGION}" \
            --to-revisions=${R_FIGHT}=40,${R_BELIEVE}=40,${R_STAND}=10,${R_WIN}=10
        else
          echo "Skipping traffic update (waiting for all four revisions to exist)."
        fi
