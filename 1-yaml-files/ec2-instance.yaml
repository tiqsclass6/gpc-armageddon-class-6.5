# ================================
# File: ec2-instance.yaml
# Parameterized EC2 in a public subnet with UserData (Brazil Task 3 page) on Amazon Linux 2023
# Uses SSM parameter for latest AMI; safe intrinsics; cfn-lint friendly
# ================================
AWSTemplateFormatVersion: '2010-09-09'
Description: Parameterized EC2 in a public subnet with VPC, IGW, RT, SG and custom UserData (AL2023 AMI via SSM)

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCidr:
    Type: String
    Default: 10.0.1.0/24
  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues: [t3.nano, t3.micro, t3.small, t3.medium, t3.large, t4g.nano, t4g.micro, t4g.small, t4g.medium, t4g.large]
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Existing EC2 KeyPair name
  SSHLocation:
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: ^(\d{1,3}\.){3}\d{1,3}/\d{1,2}$
  HttpAccessCidr:
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: ^(\d{1,3}\.){3}\d{1,3}/\d{1,2}$
  NamePrefix:
    Type: String
    Default: balerica
  AmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: [{ Key: Name, Value: !Sub '${NamePrefix}-vpc' }]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: [{ Key: Name, Value: !Sub '${NamePrefix}-igw' }]

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags: [{ Key: Name, Value: !Sub '${NamePrefix}-public-subnet' }]

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags: [{ Key: Name, Value: !Sub '${NamePrefix}-public-rtb' }]

  DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - { IpProtocol: tcp, FromPort: 22, ToPort: 22, CidrIp: !Ref SSHLocation }
        - { IpProtocol: tcp, FromPort: 80, ToPort: 80, CidrIp: !Ref HttpAccessCidr }
      Tags: [{ Key: Name, Value: !Sub '${NamePrefix}-sg' }]

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmiId
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds: [!Ref InstanceSecurityGroup]
      KeyName: !Ref KeyName
      Tags:
        - { Key: Name, Value: !Sub '${NamePrefix}-ec2' }
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -euxo pipefail
          dnf -y update
          dnf -y install httpd
          systemctl enable httpd
          systemctl start httpd

          METADATA_HOST="169.254.169.254"
          LOCAL_IPV4=$(curl -s http://${METADATA_HOST}/latest/meta-data/local-ipv4 || echo "unknown")
          AZ=$(curl -s http://${METADATA_HOST}/latest/meta-data/placement/availability-zone || echo "unknown")
          SG=$(curl -s http://${METADATA_HOST}/latest/meta-data/security-groups || echo "unknown")
          IID_JSON=$(curl -s http://${METADATA_HOST}/latest/dynamic/instance-identity/document || echo "{}")
          ACCOUNT_ID=$(echo "${IID_JSON}" | grep -o '"accountId" *: *"[^"]*"' | cut -d':' -f2 | tr -d ' "')
          REGION=$(echo "${IID_JSON}" | grep -o '"region" *: *"[^"]*"' | cut -d':' -f2 | tr -d ' "')
          HOSTNAME_OUTPUT=$(hostname -f 2>/dev/null || hostname)

          cat > /var/www/html/index.html <<'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Brazil - Armageddon Task 3</title>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <link rel="stylesheet" href="https://www.w3schools.com/w3css/4/w3.css">
            <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
            <style>
              body,h1,h3 {font-family: "Raleway", sans-serif}
              body, html {height: 100%}
              .bgimg {
                background-image: url('https://brazil-2025.s3.us-east-1.amazonaws.com/brazil-bg.jpg');
                min-height: 100%;
                background-position: center;
                background-size: cover;
              }
              .w3-display-middle { background-color: rgba(0, 0, 0, 0.466); padding: 20px; border-radius: 10px; }
              .transparent-background { background-color: rgba(0, 0, 0, 0.575); padding: 20px; border-radius: 10px; }
              .rounded-image { border-radius: 25px; }
            </style>
          </head>
          <body>
            <div class="bgimg w3-display-container w3-animate-opacity w3-text-white">
              <div class="w3-display-middle w3-center">
                <iframe src="https://brazil-2025.s3.us-east-1.amazonaws.com/brazil5.gif"
                        width="220" height="398"
                        style="border-radius:10px;" frameBorder="0" allowFullScreen>
                </iframe>
                <hr class="w3-border-grey" style="margin:auto;width:40%;margin-top:15px;">
                <h3 class="w3-large w3-center" style="margin-top:15px;">
                  <a href="https://github.com/tiqsclass6/gpc-armageddon/tree/task-3/SC1-brazil.sh"
                     class="w3-button w3-transparent w3-border w3-border-white w3-round-large w3-text-white"
                     target="_blank">
                    Source Code
                  </a>
                </h3>
              </div>
              <div class="w3-display-bottomleft w3-padding-small transparent-background">
                <h1>Brazil - Armageddon Task 3</h1>
                <h3>"I, TIQS, will make 160,000 per year thanks to Theo and Obsidian"</h3>
                <p><b>Instance Name:</b> ${HOSTNAME_OUTPUT}</p>
                <p><b>Instance Private IP Address:</b> ${LOCAL_IPV4}</p>
                <p><b>Availability Zone:</b> ${AZ}</p>
                <p><b>AWS Account ID:</b> ${ACCOUNT_ID}</p>
                <p><b>Security Groups:</b> ${SG}</p>
                <p><b>Region:</b> ${REGION}</p>
              </div>
            </div>
          </body>
          </html>
          EOF

          chown -R apache:apache /var/www/html || true

Outputs:
  InstanceId:
    Description: EC2 Instance ID
    Value: !Ref EC2Instance
  PublicIP:
    Description: Public IPv4 address
    Value: !GetAtt EC2Instance.PublicIp
  PublicDNS:
    Description: Public DNS name
    Value: !GetAtt EC2Instance.PublicDnsName
  SecurityGroupId:
    Description: Security Group ID
    Value: !Ref InstanceSecurityGroup
  SubnetId:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
